using System;
using System.Runtime.InteropServices;

// Autogenerated @ 14/07/18
namespace InterfaceUser
{
    /// <summary>
    /// Exports the delegates for all interfaces that implement ClientUser
    /// </summary>
    [ArgonCore.Interface.Delegate(Name = "ClientUser")]
    class ClientUser_Delegates
    {
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int GetHSteamUserDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void LogOnDelegate(IntPtr _, ulong steamid);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void LogOnWithPasswordDelegate(IntPtr _, string username, string password);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void LogOnAndCreateNewSteamAccountIfNeededDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint LogOnConnectionlessDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void LogOffDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BLoggedOnDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetLogonStateDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BConnectedDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BTryingToLogonDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate ulong GetSteamIdDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate ulong GetConsoleSteamIdDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate ulong GetClientInstanceIdDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsVACBannedDelegate(IntPtr _, uint game);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool SetEmailDelegate(IntPtr _, string new_email);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool SetConfigStringDelegate(IntPtr _, uint config_sub_tree, string key, string value);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetConfigStringDelegate(IntPtr _, uint config_sub_tree, string key, IntPtr value_out, int max_out);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool SetConfigIntDelegate(IntPtr _, uint config_sub_tree, string key, int new_value);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetConfigIntDelegate(IntPtr _, uint config_sub_tree, string key, ref System.Int32 value);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool DeleteConfigKeyDelegate(IntPtr _, uint config_sub_tree, string key);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetConfigStoreKeyNameDelegate(IntPtr _, uint config_sub_tree, string key, IntPtr value_out, int max_out);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int InitiateGameConnectionDelegate(IntPtr _, IntPtr blob, uint blob_count, ulong gameserver_id, uint server_ip, System.UInt16 server_port, bool secure);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void InitiateGameConnectionOldDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TerminateGameConnectionDelegate(IntPtr _, uint server_ip, System.UInt16 server_port);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool TerminateAppMuliStepDelegate(IntPtr _, uint a, uint b);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void SetSelfAsPrimaryChatDestinationDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsPrimaryChatDestinationDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void RequestLegacyCDKeyDelegate(IntPtr _, uint appid);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool AckGuestPassDelegate(IntPtr _, string passcode);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool RedeemGuestPassDelegate(IntPtr _, string passcode);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GuestPassToGiveCountDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetGuestPassToRedeemCountDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetGuestPassToGiveInfoDelegate(IntPtr _, uint nPassIndex, ref System.UInt32 pgidGuestPassID, ref System.UInt32 pnPackageID, ref System.UInt32 pRTime32Created, ref System.UInt32 pRTime32Expiration, ref System.UInt32 pRTime32Sent, ref System.UInt32 pRTime32Redeemed, IntPtr pchRecipientAddress, int cRecipientAddressSize);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetGuestPassToRedeemInfoDelegate(IntPtr _, uint nPassIndex, ref System.UInt32 pgidGuestPassID, ref System.UInt32 pnPackageID, ref System.UInt32 pRTime32Created, ref System.UInt32 pRTime32Expiration, ref System.UInt32 pRTime32Sent, ref System.UInt32 pRTime32Redeemed);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetGuestPassToRedeemSenderNameDelegate(IntPtr _, uint nPassIndex, IntPtr pchSenderName, int cSenderNameSize);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetNumAppsInGuestPassesToRedeemDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetAppsInGuestPassesToRedeemDelegate(IntPtr _, IntPtr app_array_to_fill, int max_fill);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetCountUserNotificationsDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetCountUserNotificationDelegate(IntPtr _, uint type);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void RequestStoreAuthURLDelegate(IntPtr _, string a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void SetLanguageDelegate(IntPtr _, string a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TrackAppUsageEventDelegate(IntPtr _, ulong game_id, int usage_event, string extra_info);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint RaiseConnectionPriorityDelegate(IntPtr _, uint new_priority);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void ResetConnectionPriorityDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BHasCachedCredentialsDelegate(IntPtr _, string a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool SetAccountNameForCachedCredentialLoginDelegate(IntPtr _, string name, bool a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetCurrentWebAuthTokenDelegate(IntPtr _, IntPtr out_string, int out_max);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint RequestWebAuthTokenDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void SetLoginInformationDelegate(IntPtr _, string username, string password, bool remember_password);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void SetTwoFactorCodeDelegate(IntPtr _, string code);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void ClearLoginInformationDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetLanguageDelegate(IntPtr _, IntPtr out_string, int out_max);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BIsCyberCafeDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BIsAcademicAccountDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BIsPortal2EducationAccountDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool BIsAlienwareDemoAccountDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void CreateAccountDelegate(IntPtr _, string new_username, string new_password, string new_email);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint ResetPasswordDelegate(IntPtr _, string account_name, string old_password, string new_password, string code, string answer);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void ValidatePasswordResetCodeAndSendSmsDelegate(IntPtr _, string a, string b);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TrackNatTraversalStatDelegate(IntPtr _, IntPtr stat_out);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TrackSteamUsageEventDelegate(IntPtr _, uint usage_event, string extra, uint a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TrackSteamGuiUsageDelegate(IntPtr _, string a);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void SetComputerInUseDelegate(IntPtr _);
    }
}
