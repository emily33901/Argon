using System;
using System.Runtime.InteropServices;

// Autogenerated @ 23/05/18
namespace InterfaceUser
{
    /// <summary>
    /// Exports the delegates for all interfaces that implement SteamUser
    /// </summary>
    [ArgonCore.Interface.Delegate(Name = "SteamUser")]
    class SteamUser_Delegates
    {
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate IntPtr GetHSteamUserDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool LoggedOnDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate System.UInt64 GetSteamIDDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int InitiateGameConnectionDelegate(IntPtr _, IntPtr blob, uint blob_count, System.UInt64 gameserver_id, uint server_ip, System.UInt16 server_port, bool secure);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TerminateGameConnectionDelegate(IntPtr _, uint server_ip, System.UInt16 server_port);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void TrackAppUsageEventDelegate(IntPtr _, System.UInt64 game_id, int usage_event, string extra_info);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool GetUserDataFolderDelegate(IntPtr _, string buffer, int count);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void StartVoiceRecordingDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void StopVoiceRecordingDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetAvailableVoiceDelegate(IntPtr _, System.UInt32[] compressed_data, System.UInt32[] uncompressed, uint desired_sample_rate);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int GetVoiceDelegate(IntPtr _, bool want_compressed, IntPtr dest_buffer, uint dest_buffer_size, ref System.UInt32 compressed_bytes_written, bool wants_uncompressed, IntPtr uncompressed_dest, uint uncompressed_buffer_size, ref System.UInt32 bytes_written, uint uncompressed_desired_samplerate);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int DecompressVoiceDelegate(IntPtr _, IntPtr compressed, uint compressed_size, IntPtr dest_buffer, uint dest_size, ref System.UInt32 bytes_written, uint sample_rate);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetOptimalSampleRateDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint GetAuthSessionTicketDelegate(IntPtr _, IntPtr ticket, uint ticket_size, ref System.UInt32 ticket_written);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint BeginAuthSessionDelegate(IntPtr _, IntPtr ticket, uint ticket_size, System.UInt64 steamid);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void EndAuthSessionDelegate(IntPtr _, System.UInt64 steam_id);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void CancelAuthTicketDelegate(IntPtr _, uint ticket_handle);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint UserHasLicenseForAppDelegate(IntPtr _, System.UInt64 steamID, uint appID);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate void AdvertiseGameDelegate(IntPtr _, System.UInt64 game_server_id, uint server_ip, System.UInt16 server_port);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint RequestEncryptedAppTicketDelegate(IntPtr _, IntPtr data_to_include, uint data_size);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int GetGameBadgeLevelDelegate(IntPtr _, int seris, bool foil);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate int GetSteamLevelDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate uint RequestStoreAuthURLDelegate(IntPtr _, string redirect_url);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsPhoneVerifiedDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsTwoFactorEnabledDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsPhoneIdentifyingDelegate(IntPtr _);
        [UnmanagedFunctionPointer(CallingConvention.ThisCall)]
        public delegate bool IsPhoneRequiringVerificationDelegate(IntPtr _);
    }
}
