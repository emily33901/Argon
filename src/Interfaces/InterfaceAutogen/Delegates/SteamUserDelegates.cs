using System;

// Autogenerated @ 23/05/18
namespace InterfaceUser
{
    /// <summary>
    /// Exports the delegates for all interfaces that implement SteamUser
    /// </summary>
    [ArgonCore.Interface.Delegate(Name = "SteamUser")]
    class SteamUser_Delegates
    {
        public delegate IntPtr GetHSteamUserDelegate();
        public delegate bool LoggedOnDelegate();
        public delegate System.UInt64 GetSteamIDDelegate();
        public delegate int InitiateGameConnectionDelegate(IntPtr blob, uint blob_count, System.UInt64 gameserver_id, uint server_ip, System.UInt16 server_port, bool secure);
        public delegate void TerminateGameConnectionDelegate(uint server_ip, System.UInt16 server_port);
        public delegate void TrackAppUsageEventDelegate(System.UInt64 game_id, int usage_event, string extra_info);
        public delegate bool GetUserDataFolderDelegate(string buffer, int count);
        public delegate void StartVoiceRecordingDelegate();
        public delegate void StopVoiceRecordingDelegate();
        public delegate uint GetAvailableVoiceDelegate(System.UInt32[] compressed_data, System.UInt32[] uncompressed, uint desired_sample_rate);
        public delegate int GetVoiceDelegate(bool want_compressed, IntPtr dest_buffer, uint dest_buffer_size, ref System.UInt32 compressed_bytes_written, bool wants_uncompressed, IntPtr uncompressed_dest, uint uncompressed_buffer_size, ref System.UInt32 bytes_written, uint uncompressed_desired_samplerate);
        public delegate int DecompressVoiceDelegate(IntPtr compressed, uint compressed_size, IntPtr dest_buffer, uint dest_size, ref System.UInt32 bytes_written, uint sample_rate);
        public delegate uint GetOptimalSampleRateDelegate();
        public delegate uint GetAuthSessionTicketDelegate(IntPtr ticket, uint ticket_size, ref System.UInt32 ticket_written);
        public delegate uint BeginAuthSessionDelegate(IntPtr ticket, uint ticket_size, System.UInt64 steamid);
        public delegate void EndAuthSessionDelegate(System.UInt64 steam_id);
        public delegate void CancelAuthTicketDelegate(uint ticket_handle);
        public delegate uint UserHasLicenseForAppDelegate(System.UInt64 steamID, uint appID);
        public delegate void AdvertiseGameDelegate(System.UInt64 game_server_id, uint server_ip, System.UInt16 server_port);
        public delegate uint RequestEncryptedAppTicketDelegate(IntPtr data_to_include, uint data_size);
        public delegate int GetGameBadgeLevelDelegate(int seris, bool foil);
        public delegate int GetSteamLevelDelegate();
        public delegate uint RequestStoreAuthURLDelegate(string redirect_url);
        public delegate bool IsPhoneVerifiedDelegate();
        public delegate bool IsTwoFactorEnabledDelegate();
        public delegate bool IsPhoneIdentifyingDelegate();
        public delegate bool IsPhoneRequiringVerificationDelegate();
    }
}
